apiVersion: apps/v1
kind: Deployment
metadata:
  name: items-app
  namespace: default
  labels:
    app: items-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: items-app
  template:
    metadata:
      labels:
        app: items-app
    spec:
      containers:
      - name: items-app
        image: ghcr.io/nextinterfaces/items-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: COMMIT_SHA
          value: "unknown"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: items-app
  namespace: default
  labels:
    app: items-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: items-app

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: items-app
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - roussev.com
    secretName: items-app-tls
  rules:
  - host: roussev.com
    http:
      paths:
      - path: /items(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: items-app
            port:
              number: 80
