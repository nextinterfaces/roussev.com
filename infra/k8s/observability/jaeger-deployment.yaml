---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: default
  labels:
    app: jaeger
spec:
  type: ClusterIP
  ports:
    - name: jaeger-ui
      port: 16686
      targetPort: 16686
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
  selector:
    app: jaeger
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: default
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one:1.52
          ports:
            - containerPort: 16686
              name: jaeger-ui
            - containerPort: 4318
              name: otlp-http
            - containerPort: 4317
              name: otlp-grpc
          env:
            - name: COLLECTOR_OTLP_ENABLED
              value: "true"
            # Configure Jaeger to work with /jaeger base path
            - name: QUERY_BASE_PATH
              value: "/jaeger"
            # Memory storage settings (for production, consider using Elasticsearch or Cassandra)
            - name: SPAN_STORAGE_TYPE
              value: "memory"
            - name: MEMORY_MAX_TRACES
              value: "10000"
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 16686
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 16686
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Basic auth to protect Jaeger UI in production
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: jaeger-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Jaeger UI'
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - app.roussev.com
    secretName: items-service-tls
  rules:
  - host: app.roussev.com
    http:
      paths:
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger
            port:
              number: 16686

